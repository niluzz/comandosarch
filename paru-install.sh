# Verifica se o paru j√° est√° instalado
if ! command -v paru &>/dev/null; then
    echo "üì• Instalando o paru (AUR helper)..."
    
    # Instala depend√™ncias necess√°rias antes de compilar o paru
    pacman -S --needed --noconfirm base-devel git || handle_error "Falha ao instalar depend√™ncias do Paru."

    temp_dir=$(mktemp -d)
    trap "rm -rf $temp_dir" EXIT

    git clone https://aur.archlinux.org/paru.git "$temp_dir/paru" || handle_error "Falha ao clonar o reposit√≥rio do paru."
    
    cd "$temp_dir/paru"
    makepkg -si --noconfirm || handle_error "Falha ao instalar o paru."
    cd ~  # Retorna ao diret√≥rio inicial
else
    echo "‚úÖ Paru j√° est√° instalado. Pulando instala√ß√£o."
fi

# Confirma que o paru foi instalado corretamente antes de continuar
if ! command -v paru &>/dev/null; then
    handle_error "Paru n√£o foi encontrado. Verifique a instala√ß√£o e tente novamente."
fi

aur_packages=(
    google-chrome aic94xx-firmware qed-git ast-firmware wd719x-firmware 
    onlyoffice-bin teamviewer extension-manager coolercontrol
)

for package in "${aur_packages[@]}"; do
    echo "üì¶ Instalando pacote do AUR: $package..."
    
    # For√ßa aceita√ß√£o de licen√ßa para pacotes que exigem
    paru -S --needed --noconfirm --skipreview "$package" || echo "‚ö†Ô∏è  Aviso: Falha ao instalar $package"
done

# Habilita e inicia servi√ßos
services=(
    fwupd-refresh.timer
    bluetooth.service
    teamviewerd.service
)

for service in "${services[@]}"; do
    if ! systemctl is-enabled --quiet "$service"; then
        echo "üîß Ativando servi√ßo: $service..."
        systemctl enable --now "$service" || handle_error "Falha ao ativar o servi√ßo $service"
    else
        echo "‚úÖ Servi√ßo $service j√° est√° ativo."
    fi
done
